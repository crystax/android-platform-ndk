#include "Python.h"
#include "osdefs.h"

#include <sys/types.h>
#include <string.h>


static char prefix[MAXPATHLEN+1];
static char exec_prefix[MAXPATHLEN+1];
static char progpath[MAXPATHLEN+1];
static char *module_search_path = NULL;

/* External interface */

char *
Py_GetPath(void)
{
    if (!module_search_path)
        abort();
    return module_search_path;
}

char *
Py_GetPrefix(void)
{
    if (!module_search_path)
        abort();
    return prefix;
}

char *
Py_GetExecPrefix(void)
{
    if (!module_search_path)
        abort();
    return exec_prefix;
}

char *
Py_GetProgramFullPath(void)
{
    if (!module_search_path)
        abort();
    return progpath;
}

PyAPI_FUNC(void)
Py_SetPath(char *path)
{
    if (module_search_path != NULL) {
        PyMem_Free(module_search_path);
        module_search_path = NULL;
    }
    if (path != NULL) {
        extern char* Py_GetProgramName(void);
        char* prog = Py_GetProgramName();
        strncpy(progpath, prog, MAXPATHLEN);
        exec_prefix[0] = prefix[0] = '\0';
        module_search_path = (char *)PyMem_Malloc((strlen(path) + 1) * sizeof(char));
        if (module_search_path != NULL)
            strcpy(module_search_path, path);
    }
}
